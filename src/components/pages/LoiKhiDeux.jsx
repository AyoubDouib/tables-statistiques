import { useState } from "react";

export default function LoiKhiDeux() {
  const [degreValue, setDegreValue] = useState();
  const [probaValue, setProbaValue] = useState();
  const [error, setError] = useState();
  const [result, setResult] = useState();
  const vLine = [
  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 40, 50, 60, 70, 80, 90, 100
  ];
  const hLine = [0.005, 0.010, 0.025, 0.050, 0.100, 0.50, 0.90, 0.95, 0.975, 0.99, 0.995, 0.999];
  const sheduleData = [
    [
      "0,000",
      "0,0002",
      "0,0010",
      "0,0039",
      "0,0158",
      "0,455",
      "2,71",
      "3,84",
      "5,02",
      "6,63",
      "7,88",
      "10,8",
    ],
    [
      "0,0100",
      "0,0201",
      "0,0506",
      "0,103",
      "0,211",
      "1,39",
      "4,61",
      "5,99",
      "7,38",
      "9,21",
      "10,6",
      "13,8",
    ],
    [
      "0,0717",
      "0,115",
      "0,216",
      "0,352",
      "0,584",
      "2,37",
      "6,25",
      "7,81",
      "9,35",
      "11,3",
      "12,8",
      "16,3",
    ],
    [
      "0,207",
      "0,297",
      "0,484",
      "0,711",
      "1,06",
      "3,36",
      "7,78",
      "9,49",
      "11,1",
      "13,3",
      "14,9",
      "18,5",
    ],
    [
      "0,412",
      "0,554",
      "0,831",
      "1,15",
      "1,61",
      "4,35",
      "9,24",
      "11,1",
      "12,8",
      "15,1",
      "16,7",
      "20,5",
    ],
    [
      "0,676",
      "0,872",
      "1,24",
      "1,64",
      "2,20",
      "5,35",
      "10,6",
      "12,6",
      "14,4",
      "16,8",
      "18,5",
      "22,5",
    ],
    [
      "0,989",
      "1,24",
      "1,69",
      "2,17",
      "2,83",
      "6,35",
      "12,0",
      "14,1",
      "16,0",
      "18,5",
      "20,3",
      "24,3",
    ],
    [
      "1,34",
      "1,65",
      "2,18",
      "2,73",
      "3,49",
      "7,34",
      "13,4",
      "15,5",
      "17,5",
      "20,1",
      "22,0",
      "26,1",
    ],
    [
      "1,73",
      "2,09",
      "2,70",
      "3,33",
      "4,17",
      "8,34",
      "14,7",
      "16,9",
      "19,0",
      "21,7",
      "23,6",
      "27,9",
    ],
    [
      "2,16",
      "2,56",
      "3,25",
      "3,94",
      "4,87",
      "9,34",
      "16,0",
      "18,3",
      "20,5",
      "23,2",
      "25,2",
      "29,6",
    ],
    [
      "2,60",
      "3,05",
      "3,82",
      "4,57",
      "5,58",
      "10,3",
      "17,3",
      "19,7",
      "21,9",
      "24,7",
      "26,8",
      "31,3",
    ],
    [
      "3,07",
      "3,57",
      "4,40",
      "5,23",
      "6,30",
      "11,3",
      "18,5",
      "21,0",
      "23,3",
      "26,2",
      "28,3",
      "32,9",
    ],
    [
      "3,57",
      "4,11",
      "5,01",
      "5,89",
      "7,04",
      "12,3",
      "19,8",
      "22,4",
      "24,7",
      "27,7",
      "29,8",
      "34,5",
    ],
    [
      "4,07",
      "4,66",
      "5,63",
      "6,57",
      "7,79",
      "13,3",
      "21,1",
      "23,7",
      "26,1",
      "29,1",
      "31,3",
      "36,1",
    ],
    [
      "4,60",
      "5,23",
      "6,26",
      "7,26",
      "8,55",
      "14,3",
      "22,3",
      "25,0",
      "27,5",
      "30,6",
      "32,8",
      "37,7",
    ],
    [
      "5,14",
      "5,81",
      "6,91",
      "7,96",
      "9,31",
      "15,3",
      "23,5",
      "26,3",
      "28,8",
      "32,0",
      "34,3",
      "39,3",
    ],
    [
      "5,70",
      "6,41",
      "7,56",
      "8,67",
      "10,1",
      "16,3",
      "24,8",
      "27,6",
      "30,2",
      "33,4",
      "35,7",
      "40,8",
    ],
    [
      "6,26",
      "7,01",
      "8,23",
      "9,39",
      "10,9",
      "17,3",
      "26,0",
      "28,9",
      "31,5",
      "34,8",
      "37,2",
      "42,3",
    ],
    [
      "6,84",
      "7,63",
      "8,91",
      "10,1",
      "11,7",
      "18,3",
      "27,2",
      "30,1",
      "32,9",
      "36,2",
      "38,6",
      "43,8",
    ],
    [
      "7,43",
      "8,26",
      "9,59",
      "10,9",
      "12,4",
      "19,3",
      "28,4",
      "31,4",
      "34,2",
      "37,6",
      "40,0",
      "45,3",
    ],
    [
      "8,03",
      "8,90",
      "10,3",
      "11,6",
      "13,2",
      "20,3",
      "29,6",
      "32,7",
      "35,5",
      "38,9",
      "41,4",
      "46,8",
    ],
    [
      "8,64",
      "9,54",
      "11,0",
      "12,3",
      "14,0",
      "21,3",
      "30,8",
      "33,9",
      "36,8",
      "40,3",
      "42,8",
      "48,3",
    ],
    [
      "9,26",
      "10,2",
      "11,7",
      "13,1",
      "14,8",
      "22,3",
      "32,0",
      "35,2",
      "38,1",
      "41,6",
      "44,2",
      "49,7",
    ],
    [
      "9,89",
      "10,9",
      "12,4",
      "13,8",
      "15,7",
      "23,3",
      "33,2",
      "36,4",
      "39,4",
      "43,0",
      "45,6",
      "51,2",
    ],
    [
      "10,5",
      "11,5",
      "13,1",
      "14,6",
      "16,5",
      "24,3",
      "34,4",
      "37,7",
      "40,6",
      "44,3",
      "46,9",
      "52,6",
    ],
    [
      "11,2",
      "12,2",
      "13,8",
      "15,4",
      "17,3",
      "25,3",
      "35,6",
      "38,9",
      "41,9",
      "45,6",
      "48,3",
      "54,1",
    ],
    [
      "11,8",
      "12,9",
      "14,6",
      "16,2",
      "18,1",
      "26,3",
      "36,7",
      "40,1",
      "43,2",
      "47,0",
      "49,6",
      "55,5",
    ],
    [
      "12,5",
      "13,6",
      "15,3",
      "16,9",
      "18,9",
      "27,3",
      "37,9",
      "41,3",
      "44,5",
      "48,3",
      "51,0",
      "56,9",
    ],
    [
      "13,1",
      "14,3",
      "16,0",
      "17,7",
      "19,8",
      "28,3",
      "39,1",
      "42,6",
      "45,7",
      "49,6",
      "52,3",
      "58,3",
    ],
    [
      "13,8",
      "15,0",
      "16,8",
      "18,5",
      "20,6",
      "29,3",
      "40,3",
      "43,8",
      "47,0",
      "50,9",
      "53,7",
      "59,7",
    ],
    [
      "20,7",
      "22,2",
      "24,4",
      "26,5",
      "29,1",
      "39,3",
      "51,8",
      "55,8",
      "59,3",
      "63,7",
      "66,8",
      "73,4",
    ],
    [
      "28,0",
      "29,7",
      "32,4",
      "34,8",
      "37,7",
      "49,3",
      "63,2",
      "67,5",
      "71,4",
      "76,2",
      "79,5",
      "86,7",
    ],
    [
      "35,5",
      "37,5",
      "40,5",
      "43,2",
      "46,5",
      "59,3",
      "74,4",
      "79,1",
      "83,3",
      "88,4",
      "92,0",
      "99,6",
    ],
    [
      "43,3",
      "45,4",
      "48,8",
      "51,7",
      "55,3",
      "69,3",
      "85,5",
      "90,5",
      "95,0",
      "100",
      "104",
      "112",
    ],
    [
      "51,2",
      "53,5",
      "57,2",
      "60,4",
      "64,3",
      "79,3",
      "96,6",
      "102",
      "107",
      "112",
      "116",
      "125",
    ],
    [
      "59,2",
      "61,8",
      "65,6",
      "69,1",
      "73,3",
      "89,3",
      "108",
      "113",
      "118",
      "124",
      "128",
      "137",
    ],
    [
      "67,3",
      "70,1",
      "74,2",
      "77,9",
      "82,4",
      "99,3",
      "118",
      "124",
      "130",
      "136",
      "140",
      "149",
    ]
  ];
  function changeDegreValue(e) {
    setDegreValue(e.target.value);
  }
  function changeProbaValue(e) {
    setProbaValue(e.target.value);
  }
  function getData() {
    setError()
    setResult()
    if (probaValue) {
      let data = probaValue.slice(2, 5);
      setProbaValue("0." + data);
      const vIndex = vLine.indexOf(+degreValue);
      const hIndex = hLine.indexOf(+probaValue);
      if (vIndex === -1 || hIndex === -1) {
        setError("Les valeurs entrées ne se trouvent pas dans la table de Khi Deux")
      }
      // Return The Result
      setResult(sheduleData[vIndex][hIndex])
    }
  }
  
  return (
    <div className="loi-khi-deux">
      <div className="container">
        <div className="title">Table de Loi Khi Deux</div>
        <div className="description">P(X<sup>2</sup> {"<"} a)</div>
        <div className="action-section">
          <div className="input-field">
            <input type="number" placeholder="Degré de liberté" onChange={changeDegreValue}/>
            <input type="number" placeholder="Probabilité" onChange={changeProbaValue}/>
          </div>
          <button onClick={getData}>Générer</button>
        </div>
        <div className="resultat">
          <span className="resultat-static">Résultat: </span>
          <span className="resultat-number">{result}</span>
          {error && <span className="resultat-error">{error}</span>}
        </div>
      </div>
    </div>
  )
}